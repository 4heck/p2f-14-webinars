version: '3.0'

services:
  base:
    build: ./app
    image: qwerty_backend
    entrypoint: "bash -c"
    command: "exit 0"

  web:
    image: qwerty_backend
    depends_on:
      - redis
    environment: &env
      DEBUG: 0
      ENVIRONMENT: prod
      DATABASE: postgres
      SITE_DOMAIN: qwerty.com
      CELERY_BROKER: redis://redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SQL_HOST: ${SQL_HOST}
      SQL_PORT: ${SQL_PORT}
      SQL_DATABASE: ${SQL_DATABASE}
      SQL_USER: ${SQL_USER}
      SQL_PASSWORD: ${SQL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      SENTRY_DSN: ${SENTRY_DSN}
      FLOWER_PASSWORD: ${FLOWER_PASSWORD}
      FLOWER_PORT: ${FLOWER_PORT}
      FLOWER_USER: ${FLOWER_USER}
      OPEN_WEATHER_MAP_KEY: ${OPEN_WEATHER_MAP_KEY}
      CALENDARIFIC_API_KEY: ${CALENDARIFIC_API_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
      AWS_S3_REGION_NAME: ${AWS_S3_REGION_NAME}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      APPLE_APP_SITE_ASSOCIATION: ${APPLE_APP_SITE_ASSOCIATION}
      IPINFO_TOKEN: ${IPINFO_TOKEN}
      BASE_FRONTEND_HOST: ${BASE_FRONTEND_HOST}
    restart: on-failure
    command: daphne qwerty.asgi:application --bind 0.0.0.0 --port 8000
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - 8000:8000

  celery:
    image: qwerty_backend
    restart: on-failure
    command: celery -A qwerty worker --beat --scheduler django --loglevel=info
    environment:
      <<: *env
    depends_on:
      - redis

  bot:
    image: qwerty_backend
    depends_on:
      - redis
    environment:
      <<: *env
    restart: on-failure
    command: python3 bot/start_app.py

  redis:
    image: redislabs/rejson:2.0.6
    restart: on-failure
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  static_volume:
  media_volume:
